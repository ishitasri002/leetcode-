class Solution:
    def minEatingSpeed(self, piles, h):
        def canFinish(piles, speed, h):
            hours_needed = 0
            for pile in piles:
                hours_needed += (pile + speed - 1) // speed
            return hours_needed <= h

        left, right = 1, max(piles)
        while left < right:
            mid = (left + right) // 2
            if canFinish(piles, mid, h):
                right = mid
            else:
                left = mid + 1
        return left


sol = Solution()
piles = [3, 6, 7, 11]
h = 8
print(sol.minEatingSpeed(piles, h))
