class TreeNode(object):
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution(object):
    def maxPathSum(self, root):
        self.max_sum = float('-inf')
       
        def max_path(node):
            if not node:
                return 0
            
            left_gain = max(max_path(node.left), 0)
            right_gain = max(max_path(node.right), 0)
            max_new_path = node.val + left_gain + right_gain
            self.max_sum = max(self.max_sum, max_new_path)
            
            return node.val + max(left_gain, right_gain)

        max_path(root)
        return self.max_sum
