class Solution:
    def findMin(self, nums):
        left, right = 0, len(nums) - 1
        
        while left < right:
            mid = left + (right - left) // 2
            
            # Check which side is sorted
            if nums[mid] > nums[right]:
                # If the middle element is greater than the rightmost element,
                # it means the smallest value is in the right half
                left = mid + 1
            else:
                # If the middle element is less than or equal to the rightmost element,
                # the smallest value is in the left half, including mid
                right = mid
        
        # After the loop ends, left will be pointing to the smallest value
        return nums[left]

# Example usage
solution = Solution()
nums = [4, 5, 6, 7, 0, 1, 2]
print(solution.findMin(nums))  # Output: 0

