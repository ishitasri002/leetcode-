from collections import deque

class Solution(object):
    def maxSlidingWindow(self, nums, k):
        output = []
        l = 0
        dq = deque()  # to store the indices of the array elements.

        for r in range(len(nums)):
            # Remove indices that are out of the current sliding window
            if dq and dq[0] < r - k + 1:
                dq.popleft()

            # Remove elements from the deque that are less 
            # than the current element
            while dq and nums[dq[-1]] < nums[r]:
                dq.pop()

            # Add the current element's index to the deque
            dq.append(r)

            # Append the current maximum to the output list
            # once the first window is fully traversed
            if r >= k - 1:
                output.append(nums[dq[0]])

        return output

# Example usage
sol = Solution()
nums = [1, 3, -1, -3, 5, 3, 6, 7]
k = 3
print(sol.maxSlidingWindow(nums, k))  # Output: [3, 3, 5, 5, 6, 7]
